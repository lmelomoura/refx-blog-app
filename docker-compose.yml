services:
    app:
        build:
            context: .
            dockerfile: .docker/app/Dockerfile
        image: laravel-app
        container_name: laravel-app
        tty: true
        restart: unless-stopped
        environment:
            APP_ENV: local
            DB_HOST: db
            XDEBUG_CONFIG: "client_host=host.docker.internal idekey=\"PHPSTORM\""
            PHP_IDE_CONFIG: "serverName=laravel-app"
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./.docker/app/local.ini:/usr/local/etc/php/conf.d/local.ini
            - ./.docker/app/docker-xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini

        networks:
            - app-network

    webserver:
        build:
            context: .
            dockerfile: .docker/nginx/Dockerfile
        image: laravel-nginx
        container_name: laravel_webserver
        restart: unless-stopped
        ports:
            - "8080:80"
        volumes:
            - ./:/var/www
            - ./.docker/nginx/conf.d/:/etc/nginx/conf.d/
        depends_on:
            - app
        networks:
            - app-network

    node:
        build:
            context: .
            dockerfile: .docker/node/Dockerfile
        image: laravel-node
        container_name: laravel-node
        ports:
            - "3000:3000"
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - node_modules:/var/www/node_modules
        networks:
            - app-network

    db:
        image: mysql:8.0
        container_name: laravel-mysql
        command: ['mysqld','--character-set-server=utf8', '--collation-server=utf8_unicode_ci']
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        volumes:
            - dbdata:/var/lib/mysql
        networks:
            - app-network
        ports:
            - "3306:3306"

networks:
    app-network:
        driver: bridge

volumes:
    dbdata:
        driver: local
    node_modules:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: ${PWD}/node_modules
